0.1Log:

6.16
构建了史莱姆为原型怪物的基础状态机框架以及和角色之间的相互攻击，受伤状态未全部完成，整体状态需继续改进优化。

6.17
昨日受伤部分完成，继而构建了近战哥布林（巡逻怪）、远程哥布林（射击怪）、狼怪物（类史莱姆）的基础状态机框架，将敌人控制器分层，敌人状态分类处理。远程哥布林随机寻点未完成。

6.18 - 6.19
完成了之前的随机寻点。完成了Boss巨魔和黄蜂（飞行怪物）的基础状态机框架，将Boss和敌人的控制器、状态机、各状态都分开了（除受伤和死亡两状态），黄蜂的Homing状态未完成。
思考：如何更好的进行该类似情况下的父子关系的构建和分层？
优化：敌人对玩家的范围判定改为追寻玩家的脚步印迹。

6.20 - 6.21
黄蜂状态完成。完成了Boss甲虫的部分状态机框架，将敌人的状态机和控制器重新了构建父子系统，Boss同样作为敌人的分支，但是各个状态还是分散开来（因为行为逻辑不同点比较多），
不过好但是比之前好一点了，修复了重建父子系统后的一些BUG。
优化：黄蜂偶尔会无法触发攻击玩家效果，黄蜂飞行攻击时加入角度变化；狼在Homing状态中滑步明显，动画与速度不匹配；近战哥布林攻击玩家百分百会后会移动一小段再进行攻击；
巨魔近战攻击3偶尔会出现报空；是否给部分敌人或者全部敌人某些时刻或者所有时刻在变化scale时平滑过渡至。

6.22
针对昨天的优化问题进行了优化和修复（部分取舍，比如黄蜂飞行攻击时加入角度变化和Scale平滑过渡）。完成了甲虫剩余的状态机构建，蛤蟆王及其召唤物蛤蟆的状态机构建。
思考：是否将敌人受伤状态和BOSS受伤状态分层？状态之间的逻辑判断过于繁杂，如何解决？（比如在EnemyBase中直接初始化所有敌人类型的控制器方便调用）
新状况：暂且认为是因为使用SO的原因，多个相同类型的敌人之间会受到影响，即同时在执行同一个状态（复制相同状态后替换不会出现该状况），明天重点解决该问题！